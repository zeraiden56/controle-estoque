# docker-compose.yml (resumo)
version: '3.8'

services:
  db:
    image: postgres:15
    container_name: controle-estoque-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - controle-estoque-network
      - webproxy

  backend:
    build: ./backend
    container_name: backend-estoque
    ports:
      - "9090:80"
    volumes:
      - ./backend:/var/www/html
    networks:
      - controle-estoque-network
      - webproxy
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: frontend-estoque
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    networks:
      - controle-estoque-network
      - webproxy
    command: npm run dev
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx-estoque
    ports:
      - "8084:80"
      - "8443:443" # Para aline.blucaju.com.br
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot-aline/certbot:/var/www/certbot
      - ./certbot-aline/letsencrypt:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - controle-estoque-network
      - webproxy

  certbot-aline:
    image: certbot/certbot:latest
    container_name: certbot-aline
    volumes:
      - ./certbot-aline/certbot:/var/www/certbot
      - ./certbot-aline/letsencrypt:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done'"
    networks:
      - controle-estoque-network
      - webproxy

networks:
  controle-estoque-network:
    driver: bridge
  webproxy:
    external: true # ⬅️ importante!

volumes:
  postgres_data:
